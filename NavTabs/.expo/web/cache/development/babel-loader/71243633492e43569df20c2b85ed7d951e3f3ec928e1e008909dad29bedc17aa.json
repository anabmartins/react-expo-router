{"ast":null,"code":"import React from \"react\";\nimport { useLinkingContext } from \"../link/useLinkingContext\";\nfunction useServerStateNode() {\n  var ServerContext = require(\"@react-navigation/native/lib/commonjs/ServerContext\").default;\n  var getStateFromPath = useGetStateFromPath();\n  var server = React.useContext(ServerContext);\n  var pathname = React.useMemo(function () {\n    var location = server == null ? void 0 : server.location;\n    if (!location) {\n      throw new Error(\"URL pathname to static render could not be found. This could mean that the ServerContext is mismatched between the runtime and server rendering code. This may also be a result of main package.json resolution working differently between the runtime and server rendering code.\");\n    }\n    return location.pathname + location.search;\n  }, [server]);\n  return getStateFromPath(pathname);\n}\nfunction useServerStateBrowser() {\n  var getStateFromPath = useGetStateFromPath();\n  var pathname = window.location.pathname + window.location.search;\n  return getStateFromPath(pathname);\n}\nexport function useServerState() {\n  if (typeof document === \"undefined\") {\n    return useServerStateNode();\n  }\n  return useServerStateBrowser();\n}\nfunction useGetStateFromPath() {\n  var linking = useLinkingContext();\n  return React.useCallback(function (state) {\n    return linking.getStateFromPath(state, linking.config);\n  }, [linking]);\n}","map":{"version":3,"names":["React","useLinkingContext","useServerStateNode","ServerContext","require","default","getStateFromPath","useGetStateFromPath","server","useContext","pathname","useMemo","location","Error","search","useServerStateBrowser","window","useServerState","document","linking","useCallback","state","config"],"sources":["/home/martz/GitHub/react-expo-router/NavTabs/node_modules/expo-router/src/static/useServerState.ts"],"sourcesContent":["import React from \"react\";\n\nimport getStateFromPath from \"../fork/getStateFromPath\";\nimport { useLinkingContext } from \"../link/useLinkingContext\";\n\nfunction useServerStateNode() {\n  // TODO: Expose this from React Navigation\n  const ServerContext =\n    // We use the value from `main` in the `package.json` since this\n    // should only be accessed from processes that are running in Node.js and\n    // conform to using `mainFields: ['main']` in their bundler config.\n    require(\"@react-navigation/native/lib/commonjs/ServerContext\").default;\n  const getStateFromPath = useGetStateFromPath();\n  const server = React.useContext<any>(ServerContext);\n  const pathname = React.useMemo<string>(() => {\n    const location = server?.location;\n    if (!location) {\n      throw new Error(\n        `URL pathname to static render could not be found. This could mean that the ServerContext is mismatched between the runtime and server rendering code. This may also be a result of main package.json resolution working differently between the runtime and server rendering code.`\n      );\n    }\n    return location.pathname + location.search;\n  }, [server]);\n\n  return getStateFromPath(pathname);\n}\n\nfunction useServerStateBrowser() {\n  const getStateFromPath = useGetStateFromPath();\n  const pathname = window.location.pathname + window.location.search;\n  return getStateFromPath(pathname);\n}\n\nexport function useServerState() {\n  if (typeof document === \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useServerStateNode();\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useServerStateBrowser();\n}\n\nfunction useGetStateFromPath() {\n  const linking = useLinkingContext();\n\n  return React.useCallback(\n    (state: Parameters<typeof getStateFromPath>[0]) => {\n      return linking.getStateFromPath(state, linking.config);\n    },\n    [linking]\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,iBAAiB;AAE1B,SAASC,kBAAkBA,CAAA,EAAG;EAE5B,IAAMC,aAAa,GAIjBC,OAAO,CAAC,qDAAqD,CAAC,CAACC,OAAO;EACxE,IAAMC,gBAAgB,GAAGC,mBAAmB,CAAC,CAAC;EAC9C,IAAMC,MAAM,GAAGR,KAAK,CAACS,UAAU,CAAMN,aAAa,CAAC;EACnD,IAAMO,QAAQ,GAAGV,KAAK,CAACW,OAAO,CAAS,YAAM;IAC3C,IAAMC,QAAQ,GAAGJ,MAAM,oBAANA,MAAM,CAAEI,QAAQ;IACjC,IAAI,CAACA,QAAQ,EAAE;MACb,MAAM,IAAIC,KAAK,qRAEf,CAAC;IACH;IACA,OAAOD,QAAQ,CAACF,QAAQ,GAAGE,QAAQ,CAACE,MAAM;EAC5C,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,OAAOF,gBAAgB,CAACI,QAAQ,CAAC;AACnC;AAEA,SAASK,qBAAqBA,CAAA,EAAG;EAC/B,IAAMT,gBAAgB,GAAGC,mBAAmB,CAAC,CAAC;EAC9C,IAAMG,QAAQ,GAAGM,MAAM,CAACJ,QAAQ,CAACF,QAAQ,GAAGM,MAAM,CAACJ,QAAQ,CAACE,MAAM;EAClE,OAAOR,gBAAgB,CAACI,QAAQ,CAAC;AACnC;AAEA,OAAO,SAASO,cAAcA,CAAA,EAAG;EAC/B,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;IAEnC,OAAOhB,kBAAkB,CAAC,CAAC;EAC7B;EAEA,OAAOa,qBAAqB,CAAC,CAAC;AAChC;AAEA,SAASR,mBAAmBA,CAAA,EAAG;EAC7B,IAAMY,OAAO,GAAGlB,iBAAiB,CAAC,CAAC;EAEnC,OAAOD,KAAK,CAACoB,WAAW,CACtB,UAACC,KAA6C,EAAK;IACjD,OAAOF,OAAO,CAACb,gBAAgB,CAACe,KAAK,EAAEF,OAAO,CAACG,MAAM,CAAC;EACxD,CAAC,EACD,CAACH,OAAO,CACV,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}