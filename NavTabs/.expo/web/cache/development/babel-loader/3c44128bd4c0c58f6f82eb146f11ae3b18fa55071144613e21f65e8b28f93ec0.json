{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatProjectFileName = void 0;\nfunction formatProjectFileName(file) {\n  if (file == null) {\n    return \"<unknown>\";\n  }\n  var projectRoot = \"/home/martz/GitHub/react-expo-router/NavTabs\";\n  if (!projectRoot) {\n    return file;\n  }\n  return pathRelativeToPath(file.replace(/\\\\/g, \"/\"), projectRoot.replace(/\\\\/g, \"/\")).replace(/\\?.*$/, \"\");\n}\nexports.formatProjectFileName = formatProjectFileName;\nfunction pathRelativeToPath(path, relativeTo) {\n  var sep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"/\";\n  var relativeToParts = relativeTo.split(sep);\n  var pathParts = path.split(sep);\n  var i = 0;\n  while (i < relativeToParts.length && i < pathParts.length) {\n    if (relativeToParts[i] !== pathParts[i]) {\n      break;\n    }\n    i++;\n  }\n  return pathParts.slice(i).join(sep);\n}","map":{"version":3,"names":["formatProjectFileName","file","projectRoot","pathRelativeToPath","replace","exports","path","relativeTo","sep","arguments","length","undefined","relativeToParts","split","pathParts","i","slice","join"],"sources":["/home/martz/GitHub/react-expo-router/NavTabs/node_modules/@expo/metro-runtime/src/error-overlay/formatProjectFilePath.ts"],"sourcesContent":["declare const process: any;\n\nexport function formatProjectFileName(file?: string | null): string {\n  if (file == null) {\n    return \"<unknown>\";\n  }\n  const projectRoot = process.env.EXPO_PROJECT_ROOT;\n  if (!projectRoot) {\n    return file;\n  }\n  return pathRelativeToPath(\n    file.replace(/\\\\/g, \"/\"),\n    projectRoot.replace(/\\\\/g, \"/\")\n  ).replace(/\\?.*$/, \"\");\n}\n\nfunction pathRelativeToPath(path: string, relativeTo: string, sep = \"/\") {\n  const relativeToParts = relativeTo.split(sep);\n  const pathParts = path.split(sep);\n  let i = 0;\n  while (i < relativeToParts.length && i < pathParts.length) {\n    if (relativeToParts[i] !== pathParts[i]) {\n      break;\n    }\n    i++;\n  }\n  return pathParts.slice(i).join(sep);\n}\n"],"mappings":";;;;;;AAEA,SAAgBA,qBAAqBA,CAACC,IAAoB;EACxD,IAAIA,IAAI,IAAI,IAAI,EAAE;IAChB,OAAO,WAAW;;EAEpB,IAAMC,WAAW,iDAAgC;EACjD,IAAI,CAACA,WAAW,EAAE;IAChB,OAAOD,IAAI;;EAEb,OAAOE,kBAAkB,CACvBF,IAAI,CAACG,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,EACxBF,WAAW,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAChC,CAACA,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;AACxB;AAZAC,OAAA,CAAAL,qBAAA,GAAAA,qBAAA;AAcA,SAASG,kBAAkBA,CAACG,IAAY,EAAEC,UAAkB,EAAW;EAAA,IAATC,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EACrE,IAAMG,eAAe,GAAGL,UAAU,CAACM,KAAK,CAACL,GAAG,CAAC;EAC7C,IAAMM,SAAS,GAAGR,IAAI,CAACO,KAAK,CAACL,GAAG,CAAC;EACjC,IAAIO,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGH,eAAe,CAACF,MAAM,IAAIK,CAAC,GAAGD,SAAS,CAACJ,MAAM,EAAE;IACzD,IAAIE,eAAe,CAACG,CAAC,CAAC,KAAKD,SAAS,CAACC,CAAC,CAAC,EAAE;MACvC;;IAEFA,CAAC,EAAE;;EAEL,OAAOD,SAAS,CAACE,KAAK,CAACD,CAAC,CAAC,CAACE,IAAI,CAACT,GAAG,CAAC;AACrC"},"metadata":{},"sourceType":"script","externalDependencies":[]}